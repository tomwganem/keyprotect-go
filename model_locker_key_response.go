/*
 * IBM Key Protect API
 *
 * IBM Key Protect helps you provision encrypted keys for apps across IBM Cloud. As you manage the lifecycle of your keys, you can benefit from knowing that your keys are secured by cloud-based FIPS 140-2 Level 2 hardware security modules (HSMs) that protect against theft of information. You can use the Key Protect API to store, generate, and retrieve your key material. Keys within the service can protect any type of data in your symmetric key based encryption solution.
 *
 * API version: 2.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package keyprotect

import (
	"os"
	"time"
)

type LockerKeyResponse struct {
	// The v4 UUID used to uniquely identify the resource, as specified by RFC 4122.
	Id string `json:"id,omitempty"`
	// The date the transport encryption key was created. The date format follows RFC 3339.
	CreationDate time.Time `json:"creationDate,omitempty"`
	// The date the transport encryption key expires. The date format follows RFC 3339.
	ExpirationDate time.Time `json:"expirationDate,omitempty"`
	// The transport encryption key that you can use to encrypt key material before you import it into the service.      This value is a DER-encoded public key in PKIX format. Because DER encoding is a binary format, the value is base64 encoded.
	Payload *os.File `json:"payload,omitempty"`
	// The import token that is used to verify the liveliness and integrity of a transport key. If you use a transport key to encrypt key material before you upload it to the service, you must supply the retrieved import token as a parameter in the `POST /keys` request.
	ImportToken *os.File `json:"importToken,omitempty"`
}
